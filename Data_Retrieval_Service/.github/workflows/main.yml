name: Data Retrieval Service CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      name: Checkout to the code

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2 

    - name: Display AWS CLI Configuration
      run: aws configure list

    - name: Check AWS CLI Version
      run: aws --version

    - name: Login to Amazon ECR
      id: login-ecr
      run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 665616097220.dkr.ecr.us-east-2.amazonaws.com

    - name: Build & Push Docker Image to Amazon ECR
      id: docker_build_push
      run: |
        TAG=$GITHUB_SHA
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        docker build -t 665616097220.dkr.ecr.us-east-2.amazonaws.com/developeriq:$TAG .
        docker push 665616097220.dkr.ecr.us-east-2.amazonaws.com/developeriq:$TAG

    - name: Update Deployment Image Tag
      run: |
        sed -i 's|image: .*|image: '665616097220.dkr.ecr.us-east-2.amazonaws.com'/developeriq:${{ steps.docker_build_push.outputs.tag }}|' deployment.yaml

    - name: Deploy to EKS Cluster
      run: |
        aws eks --region us-east-2 update-kubeconfig --name ccEKScluster
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

  test:

    runs-on: ubuntu-latest

    needs: build  # Ensure the 'build' job is completed before running tests

    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - uses: actions/checkout@v3
      name: Checkout to the code

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt 

    - name: Run Tests
      run: |
        python -m unittest tests/test_integration.py